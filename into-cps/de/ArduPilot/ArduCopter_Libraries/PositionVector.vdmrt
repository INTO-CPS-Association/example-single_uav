-- Convertion operations between Location and Vector representation of position
class PositionVector

instance variables
	ahrs : AP_AHRS;
	insNav : AP_InertialNav_NavEKF;
	
	-- TODO: update scaleLongitude when setting new home
	scaleLongitude: real := 1;

operations
	public PositionVector: AP_AHRS * AP_InertialNav_NavEKF ==> PositionVector
	PositionVector(ahr, ins) == (
		ahrs := ahr;
		insNav := ins;
	);
	
	public locationToVector: Navigation`Location ==> Vector`Vector3
	locationToVector(loc) == (
		let origin = insNav.getOrigin() in
		let altAboveOrigin = loc.alt + (ahrs.getHome().alt - origin.alt) in
		return mk_Vector`Vector3(
			(loc.lat - origin.lat) * AP_Math`LATLON_TO_CM, 
			(loc.long - origin.long) * AP_Math`LATLON_TO_CM * scaleLongitude,
			altAboveOrigin);
	);
	
	public getBearingCd: Vector`Vector3 * Vector`Vector3 ==> real
	getBearingCd(origin,destination) == (
		dcl bearing : real := AP_Math`radToCentiDegrees(Vector`atan2(destination.y - origin.y, destination.x - origin.x));
		
		if bearing < 0 then
			bearing := bearing + 36000;
			
		return bearing;
	)
	pre origin <> destination;
	
end PositionVector