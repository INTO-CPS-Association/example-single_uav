class LowPassFilter is subclass of Filter

instance variables
	alpha : real := 1;
	baseValue : real := 0;
	baseValueSet : bool := false;
	
operations
	public setCutoffFrequency : real * real ==> ()
	setCutoffFrequency(timestep, cutoffFreq) ==
	(
		let rc : real = 1/(2*MATH`pi*cutoffFreq) in
			alpha := timestep / (timestep + rc);
	)
	pre timestep > 0 and cutoffFreq > 0;
	
	public setTimeConstant : real * real ==> ()
	setTimeConstant(timestep, timeConstant) ==
	(
		alpha := timestep / (timestep + timeConstant);
	)
	pre timestep > 0 and timeConstant > 0;

	public apply : real ==> real
	apply(sample) ==
	(
		if not baseValueSet then
		(
			baseValue := sample;
			baseValueSet := true;
		);
		
		baseValue := baseValue + alpha * (sample - baseValue);
		return baseValue;
	);
	
	public reset : () ==> ()
	reset() == 
	(
		baseValueSet := false;
	);
	
	public reset : real ==> ()
	reset(newBasevalue) == 
	(
		baseValue := newBasevalue;
		baseValueSet := true;
	);

end LowPassFilter