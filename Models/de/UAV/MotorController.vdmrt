-- Possible extensions to this class could be different motor setups
class MotorController
instance variables	
	motor1 : Motor;
	motor2 : Motor;
	motor3 : Motor;
	motor4 : Motor;
	currentCommand : Types`MotorCommand;

operations
public MotorController: () ==> MotorController
	MotorController() == (
		motor1 := new Motor(HardwareInterface`throttle1);
		motor2 := new Motor(HardwareInterface`throttle2);
		motor3 := new Motor(HardwareInterface`throttle3);
		motor4 := new Motor(HardwareInterface`throttle4);
	);
	
	public runMotorCommand : Types`MotorCommand ==> ()
	runMotorCommand(mc) == (
		currentCommand := mc;
		setThrottle(mc.throttle);
	);
	
	private setThrottle : real ==> ()
	setThrottle(throttle) == (	
		
		motor1.setThrottle(throttle);
		motor2.setThrottle(throttle);
		motor3.setThrottle(throttle);
		motor4.setThrottle(throttle);		
	);

end MotorController