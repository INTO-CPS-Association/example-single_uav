class FlightMode

types
	public MODE = <ACRO> | <STABILIZE> | <ALT_HOLD> | <AUTO> | <CIRCLE> | <LOITER> | <LAND> |
					<GUIDED> | <RTL> | <DRIFT> | <SPORT> | <FLIP> | <AUTOTUNE> | <POSHOLD>
instance variables
	wpNav: AC_WPNav;
	attitudeControl : AC_AttitudeControl;
	posControl : AC_PosControl;
	controlMode: MODE := <STABILIZE>; --<ALT_HOLD>;
	
	rollTarget : real := 0;
	pitchTarget : real := 0;
	yawRateTarget : real := 0;
	climbRateTarget : real := 0;
	latRateTarget : real := 0;
	
	pilote_desired_throttle : real := 0;
	
	-- smoothing_gain : a number from 1 to 50 with 1 being sluggish and 50 being very crisp
	smoothingGain : real := 38;
	
	--Todo Ctha: Verify ekf values below. 
	--Values chosen from https://github.com/ArduPilot/ardupilot/blob/master/libraries/AP_AHRS/AP_AHRS_NavEKF.cpp#L1083
	--and https://github.com/ArduPilot/ardupilot/blob/567d5cdbe6c92e71a17ea29f74fcb6fb03b31b18/libraries/AP_NavEKF2/AP_NavEKF2_Outputs.cpp#L317
	ekfGndSpdLimit : real := 400.0; 
	ekfNavVelGainScaler: real := 1.0;
	
	guidedPosTarget : Vector`Vector3; -- position target (used by posvel controller only)
	guidedVelTargetCms : Vector`Vector3; -- velocity target (used by velocity controller and posvel controller)

operations 
	public FlightMode : AC_AttitudeControl * AC_PosControl * AC_WPNav ==> FlightMode
	FlightMode(att, pos, nav) == (
		attitudeControl := att;
		posControl := pos;
		wpNav := nav;
	);
	
	private guidedRunStart : () ==> ()
	guidedRunStart() ==
	(
		wpNav.wpAndSplineInit();
	);
	
	public update : () ==> ()
		update() == (		
		cases controlMode :
		<ALT_HOLD> -> altholdUpdate(),
		<STABILIZE> -> stabilizaUpdate(),
		<GUIDED> -> guidedRun()
		end
	);
	
	public getMode : () ==> MODE 
	getMode() == return controlMode;
	
	public setMode : MODE ==> () 
	setMode(mode) == (
		controlMode := mode;
	); 
	
	-- guided_set_destination - sets guided mode's target destination
	public guidedSetDestination : Vector`Vector3  ==> ()
	guidedSetDestination(destination) == (
		guidedRunStart();
		wpNav.setWpOriginAndDestination(posControl.getCurrentPosition(),destination);	
	);
	
	-- Some constructs was abstracted from https://github.com/ArduPilot/ardupilot/blob/master/ArduCopter/control_guided.cpp#L361
	private guidedRun : () ==> ()
	guidedRun() == (
		wpNav.updateWpnav();
		posControl.updateZController();
		attitudeControl.update(posControl.getRoll(),posControl.getPitch(),getAutoHeading(),smoothingGain);
	);
	
	private getAutoHeading : () ==> real
	getAutoHeading() ==
	(
		return wpNav.getYaw();
	);
	
	-- Keeps the UAV in a stable altitude position.
	private altholdUpdate : () ==> ()
	altholdUpdate() ==
	(
		attitudeControl.update(rollTarget,pitchTarget,yawRateTarget,smoothingGain);
		posControl.setAltTargetFromClimbRate(climbRateTarget);
        posControl.updateZController();
	);
	-- Keeps the UAV in a stable oriented position. Does not keep a given altitude.
	private stabilizaUpdate : () ==> ()
	stabilizaUpdate() ==
	(
		attitudeControl.update(rollTarget,pitchTarget,yawRateTarget,smoothingGain);
		attitudeControl.setThrottleOut(pilote_desired_throttle, true);
	);
	
end FlightMode