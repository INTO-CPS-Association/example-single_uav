class AP_AHRS 

instance variables
	protected gps:	AP_GPS;
	protected baro:	AP_Baro; 
	protected ins:	AP_InertialSensor;
	
	-- Home location
	protected home: Navigation`Location := mk_Navigation`Location(0,0,0);
	
	-- Euler angles in radians: Assuming initial attitude as followes:
	public roll: real := 0;
	public pitch: real := 0;
	public yaw: real := 0;
	-- Euler angles in centi-degrees
	public rollCd: real := 0;
	public pitchCd: real := 0;
	public yawCd: real := 0;
	
	-- Trigonometric helper variables
	public sinRoll: real := 0;
	public sinPitch: real := 0;
	public sinYaw: real := 0;
	public cosRoll: real := 1;
	public cosPitch: real := 1;
	public cosYaw: real := 1;

operations

	public AP_AHRS: AP_InertialSensor * AP_Baro * AP_GPS ==> AP_AHRS
	AP_AHRS(i, b, g) == (
	 	ins := i;
		baro := b;
		gps := g
	);
	
	public update: () ==> ()
	update() == (
		-- TODO: update ins, sensor fusion? etc.
		skip;
	);
	
	public getHome: () ==> Navigation`Location
	getHome() == return home;
	
	public getGyro: () ==> Vector`Vector3
	getGyro() == is subclass responsibility;
	
	-- TODO: This should not be subclass responsibility
	protected public getAccelerationEfBlended : () ==> Vector`Vector3
	getAccelerationEfBlended() == is subclass responsibility;

end AP_AHRS